#!/usr/bin/env python

# create fsf file for arbitrary design
import numpy as N
import sys
import os
import subprocess as sub
from openfmri_utils import *

# create as a function that will be called by mk_all_fsf.py
# just set these for testing
## taskid='ds006'
## subnum=2
## tasknum=1
## nruns=6

basedir='/corral/utexas/poldracklab/openfmri/staged/'

def mk_level2_fsf(taskid,subnum,tasknum,runs,basedir):


    subdir='%s/%s/sub%03d'%(basedir,taskid,subnum)

    # read the conditions_key file
    cond_key=load_condkey(basedir+taskid+'/condition_key.txt')

    conditions=cond_key[tasknum].values()
    nruns=len(runs)

    stubfilename=basedir+'/group_design.stub'
    modeldir=subdir+'/model/'

    outfilename='%s/model/task%03d.fsf'%(subdir,tasknum)
    print('%s\n'%outfilename)
    outfile=open(outfilename,'w')
    outfile.write('# Automatically generated by mk_fsf.py\n')

    # first get common lines from stub file
    stubfile=open(stubfilename,'r')
    for l in stubfile:
        outfile.write(l)

    stubfile.close()

    # now add custom lines

    outfile.write('\n\n### AUTOMATICALLY GENERATED PART###\n\n')

    outfile.write('set fmri(outputdir) "%s/model/task%03d.gfeat"\n'%(subdir,tasknum))
    outfile.write('set fmri(npts) %d\n'%nruns) # number of runs
    outfile.write('set fmri(multiple) %d\n'%nruns) # number of runs
    outfile.write('set fmri(ncopeimputs) %d\n'%len(cond_key[tasknum])) # number of copes


    for r in range(nruns):
        outfile.write('set feat_files(%d) "%s/%s/sub%03d/model/task%03d_run%03d.feat"\n'%(int(r+1),basedir,taskid,subnum,tasknum,runs[r]))
        outfile.write('set fmri(evg%d.1) 1\n'%int(r+1))
        outfile.write('set fmri(groupmem.%d) 1\n'%int(r+1))
        outfile.write('set fmri(copeinput.%d) 1\n'%int(r+1))
        
                
        
    outfile.close()
