#!/usr/bin/env python

# create fsf file for arbitrary design
import numpy as N
import sys
import os
import subprocess as sub
from openfmri_utils import *

# create as a function that will be called by mk_all_fsf.py
# just set these for testing
taskid='ds002'
nsubs=17
tasknum=1
## nruns=6
#runs=[1,2]
copenum=1

basedir='/corral/utexas/poldracklab/openfmri/shared/'

def mk_level3_fsf(taskid,tasknum,nsubs,basedir):
#if 1==1:

    groupdir='%s/%s/group'%(basedir,taskid)
    if not os.path.exists(groupdir):
        os.mkdir(groupdir)
    modeldir='%s/%s/group/task%03d'%(basedir,taskid,tasknum)
    if not os.path.exists(modeldir):
        os.mkdir(modeldir)

    # read the conditions_key file
    cond_key=load_condkey(basedir+taskid+'/condition_key.txt')

    # figure out the number of copes
    conditions=cond_key[tasknum].values()
    ncopes=len(conditions)+1
    
    stubfilename=basedir+'/design_level3.stub'

    for copenum in range(1,ncopes+1):
        outfilename='%s/cope%03d.fsf'%(modeldir,copenum)
        print('%s\n'%outfilename)
        outfile=open(outfilename,'w')
        outfile.write('# Automatically generated by mk_fsf.py\n')

        # first get common lines from stub file
        stubfile=open(stubfilename,'r')
        for l in stubfile:
            outfile.write(l)

        stubfile.close()

        # now add custom lines

        outfile.write('\n\n### AUTOMATICALLY GENERATED PART###\n\n')

        outfile.write('set fmri(outputdir) "%s/cope%03d.gfeat"\n'%(modeldir,copenum))
        outfile.write('set fmri(npts) %d\n'%nsubs) # number of runs
        outfile.write('set fmri(multiple) %d\n'%nsubs) # number of runs


        for r in range(nsubs):
            outfile.write('set feat_files(%d) "%s/%s/sub%03d/model/task%03d.gfeat/cope%d.feat"\n'%(int(r+1),basedir,taskid,r+1,tasknum,copenum))
            outfile.write('set fmri(evg%d.1) 1\n'%int(r+1))
            outfile.write('set fmri(groupmem.%d) 1\n'%int(r+1))


        outfile.close()
